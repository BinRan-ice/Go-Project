package main

import "fmt"

// 变量 ( 有名字、没有名字：匿名 )
// 十分特殊、匿名变量 （黑洞，一切东西丢进去，任何赋值给匿名变量的值都会被丢弃）
// _ 下划线，就是匿名变量在Go语言中

// 函数 一段代码的集合。
//
//	func  test 函数名 （参数,参数....） 返回一些东西{
//	 一段代码的集合，通过or不通过参数，返回结果
//	}
//
// 基本的操作函数，调用函数，返回两个数字。
func test() (int, int) {
	// return 返回结果
	return 100, 200
}

// 在Go语言中会大量使用到
// 匿名变量不占用内存空间，不会分配内存。
func main() {
	// 调用这个test函数，应该会返回两个结果，100,200

	// 变量 ： 除了直接定义之外，还可以是一个结果的赋值
	//var a int = 100
	// 只想要test返回的第一个结果,这时候就需要使用匿名变量 _。
	a, _ := test() // a,b := 100,200
	fmt.Println(a)
	// 只想要test返回的第二个结果,这时候就需要使用匿名变量 _。
	_, b := test()
	fmt.Println(b)
}
